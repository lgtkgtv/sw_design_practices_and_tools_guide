---
- name: Create app directory structure
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user | default('appuser') }}"
    mode: '0755'
  loop:
    - "{{ app_directory }}/app"
    - "{{ app_directory }}/logs"

- name: Copy application files
  copy:
    src: "{{ playbook_dir }}/../files/fastapi_hello/{{ item }}"
    dest: "{{ app_directory }}/app/{{ item }}"
    owner: "{{ app_user | default('appuser') }}"
    mode: '0644'
  loop:
    - main.py
    - requirements.txt
    - Dockerfile

- name: Build Docker image
  community.docker.docker_image:
    name: "{{ docker_image_name }}:{{ docker_image_tag }}"
    source: build
    build:
      path: "{{ app_directory }}/app"
    state: present
    force_source: yes

- name: Stop existing container if running
  community.docker.docker_container:
    name: "{{ container_name }}"
    state: absent
  ignore_errors: yes

- name: Start FastAPI container
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "{{ docker_image_name }}:{{ docker_image_tag }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ fastapi_port }}:8000"
    env:
      ENVIRONMENT: "{{ environment | default('development') | string }}"
      CLOUD_PROVIDER: "{{ cloud_provider | default('unknown') | string }}"
      APP_VERSION: "{{ app_version | default('1.0.0') | string }}"
    log_driver: json-file
    log_options:
      max-size: "10m"
      max-file: "3"

- name: Wait for health check
  uri:
    url: "http://localhost:{{ fastapi_port | default(8000) }}/health"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 12
  delay: 5

- name: Display access info
  debug:
    msg:
      - "‚úÖ Application is running!"
      - "üåê URL: http://{{ ansible_host }}:{{ fastapi_port | default(8000) }}"
      - "üìö Docs: http://{{ ansible_host }}:{{ fastapi_port | default(8000) }}/docs"
